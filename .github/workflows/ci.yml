# This workflow uses actions that are not certified by GitHub.  They are
# provided by a third-party and are governed by separate terms of service,
# privacy policy, and support documentation.
#
# This workflow will install a prebuilt Ruby version, install dependencies, and
# run tests and linters.
name: "CI"
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main", "develop" ]
  workflow_call:
jobs:
  rspec:
    runs-on: ubuntu-20.04
    services:
      mysql:
        image: mysql:8.0
        ports:
          - 33306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
        env:
          MYSQL_DATABASE: rails_test
          MYSQL_USER: user
          MYSQL_PASSWORD: password
          MYSQL_ROOT_PASSWORD: password
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      # Add or replace dependency steps here
      - name: Install Ruby and gems
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.2.2'
          bundler-cache: true
      - name: start up MySQL
        run: sudo service mysql start
      - name: Run tests
        env:
          RAILS_ENV: test
          DATABASE_USERNAME: root
          DATABASE_PASSWORD: password
          DATABASE_HOST: 127.0.0.1
          DATABASE_NAME: rails_test
          DATABASE_PORT: 33306:3306
        run: |
          bundle exec rake db:create db:migrate RAILS_ENV=test
          bundle exec rspec

  rubocop:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Install Ruby and gems
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.2.2'
          bundler-cache: true
      - name: rubocop
        run: bundle exec rubocop

  rails_best_practices:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Install Ruby and gems
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.2.2'
          bundler-cache: true
      - name: rails_best_practices
        run: bundle exec rails_best_practices
